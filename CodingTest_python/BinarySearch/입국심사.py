'''
-임의의 시간동안 몇 명이 심사 받을 수 있는지 확인하고 이 값을 최소로 만들기
-시간의 최소, 최대 범위를 구한 후 그 중간 값이 n명을 심사할 수 있는 시간인지 확인하며 이진 탐색 진행
-중간 시간 동안
->n명보다 많이 심사 가능 -> 중간값 기준 왼쪽 범위 탐색(더 적은 시간동안 심사할 수 있다는 의미)
->n명보다 적게 심사 가능 -> 중간값 기준 오른쪽 범위 탐색(심사할 시간이 부족하다는 의미)
-임의의 시간동안 몇 몇을 심사할 수 있는지 확인하는 방법
->임의의 시간동안 심사 가능한 사람 수=임의의 시간/각 심사관들이 심사하는데 걸리는 시간
ex)임의의 시간 30분, 각 심사관들이 심사하는데 걸리는 시간[7, 10]
임의의 시간동안 심사 가능한 사람 수=(30/7)+(30/10)
30분 동안 7명 심사 가능
'''
def solution(n, times):
    maxtime=max(times)*n
    mintime=min(times)
    while mintime<=maxtime:
        mid=(mintime+maxtime)//2
        people=sum([mid//t for t in times])#임의의 시간동안 심사 가능한 사람 수
        if people>=n:#심사 가능한 사람 수가 실제 사람 수보다 크거나 같은 경우
            answer=mid#같은 경우는 반복문 탈출 후 바로 출력되도록 answer값 지정
            maxtime=mid-1#시간 줄이기
        elif people<n:#심사 가능한 사람 수가 실제 사람 수보다 작은 경우
            mintime=mid+1#시간 늘리기
    return answer

print(solution(6, [7, 10]))
